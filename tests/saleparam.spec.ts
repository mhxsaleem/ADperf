import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://uat-external-alb.adp-uat.aws.domgencloud.net/GTConnect/UnifiedAcceptor/FrameworkDesktop.Main/2?sso=false');
  // await page.evaluate(() => {
  //   document.body.style.zoom = '75%';
  // });
  const Username = 'awsintegration';
  const Password = 'automation0325';
  const Surname = 'ADPAlGCpDf';
  const brand = 'Whirlpool';
  const model_number = 'ZWRS325SDH';
  const item_type = 'Refrigerator';
  const date_received = '12/12/2024';
  const purchase_price = '1000';
  const serial_number = '123456789';
  const AC_account_number = Math.floor((Math.random() * 9000000000)+1000000000).toString();
  console.log("AC_account_number: " + AC_account_number);
  // const AC_account_number = '1221050896';
  const AC_Routing_Number = '122105155';
  const extended_plan = 'No';
  const working_order = 'Yes';
  const damage_from_incident = 'No';
  const item_address_same = 'Yes';
  const saved_address = 'Yes';
  await page.getByRole('textbox', { name: 'Username' }).click();
  await page.getByRole('textbox', { name: 'Username' }).fill(Username);
  await page.getByRole('textbox', { name: 'Password' }).click();
  await page.getByRole('textbox', { name: 'Password' }).fill(Password);
  await page.getByRole('button', { name: 'Login' }).click();
  await page.getByText('WIB Agent Profile').click();
  await page.getByRole('button', { name: 'Select' }).click();
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByRole('link', { name: 'Identify Customer' }).click();
  // await page.waitForSelector('[id$="_cctRenderURL"]', { state: 'visible' });
  // await page.locator('[id$="_cctRenderURL"]').contentFrame().getByText('- Please Select -').waitFor();
  await page.waitForTimeout(5000);
  const iframe = page.frameLocator('iframe[id*="cctRenderURL"]');
  await iframe.getByText('- Please Select -').click();
  await iframe.getByRole('option', { name: 'Whirlpool' }).click();
  await iframe.getByTestId('input_surname').fill(Surname);
  await iframe.getByTestId('button_search').click();
  await iframe.locator('[data-id^="GEN:"]').first().dblclick();
  await page.getByRole('link', { name: 'Add Item' }).click();
  await page.waitForTimeout(10000);
  const registerIframe = page.frameLocator('iframe[id*="_cctRenderURL"][src*="plans/new"]')
  await registerIframe.locator('[data-testid=button_registrationNextButton]').click();
  await page.waitForTimeout(5000);
  await registerIframe.getByTestId('registrationCard.__ui__hasRegistrationCard_false').click();
  await page.waitForTimeout(2000);
  await registerIframe.getByRole('combobox', { name: '- Please Select -' }).first().click();
  await registerIframe.getByRole('option', { name: brand }).click();
  await registerIframe.getByRole('combobox', { name: '- Please Select -' }).nth(1).click();
  await registerIframe.getByRole('option', { name: item_type, exact: true }).click();
  
  await registerIframe.getByTestId('input_purchase.date').fill(date_received);
  await registerIframe.getByTestId('input_purchase.price').fill(purchase_price);
  await registerIframe.getByRole('combobox', { name: 'Search for a model (min. 3' }).click();
  await registerIframe.getByRole('combobox', { name: 'Search for a model (min. 3' }).fill(model_number);
  await registerIframe.getByTestId('input_serialNumber').fill(serial_number);
  await registerIframe.getByTestId('additionalDetails.operationalStatusCode_true').click();
  await registerIframe.getByText('Is the item in good working order?YesNo').click();
  await registerIframe.getByTestId('additionalDetails.extendedServicePlanOnAppliance_false').click();
  await registerIframe.getByTestId('button_address-capture-toggle').click();
  await registerIframe.getByTestId('address-menu-item').click();
  await registerIframe.getByTestId('button_add-item').click();
  await page.waitForTimeout(10000);
  await registerIframe.getByTestId('button_save').click();
  await page.waitForTimeout(5000);
  await registerIframe.getByRole('checkbox', { name: 'Select row' }).check();
  await registerIframe.getByTestId('button_next').click();
  await page.waitForTimeout(5000);
  await registerIframe.getByTestId('button_save').click();
  await page.waitForTimeout(5000);
  await registerIframe.getByTestId('button_next').click();
  await page.waitForTimeout(5000);
  await registerIframe.getByRole('row', { name: item_type + ' ' + brand + ' Appliance' }).getByLabel('Select row').check();
  await registerIframe.getByTestId('button_save').click();
  await page.waitForTimeout(5000);
  await registerIframe.getByTestId('account.__ui__isSavedBillingAccount_N').click();
  await registerIframe.getByTestId('account.payment.methodType_ACH').click();
  await registerIframe.getByTestId('button_address-capture-toggle').click();
  await page.waitForTimeout(2000);
  await registerIframe.getByTestId('address-menu-item').click();
  await registerIframe.getByTestId('button_next').click();
  await page.waitForTimeout(10000);
  await registerIframe.getByText('- Select Account Type -').click();
  await registerIframe.getByRole('option', { name: 'Savings' }).click();
  await registerIframe.getByTestId('input_accountHolder').click();
  await registerIframe.getByTestId('input_accountHolder').fill('Acc New');
  await registerIframe.getByTestId('input_accountNo').click();
  await registerIframe.getByTestId('input_accountNo').fill(AC_account_number);
  await registerIframe.getByTestId('input_routingNumber').click();
  await registerIframe.getByTestId('input_routingNumber').fill(AC_Routing_Number);
  await registerIframe.getByTestId('button_save').click();
  await page.waitForTimeout(20000);
});